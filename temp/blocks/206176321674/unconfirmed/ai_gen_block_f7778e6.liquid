{% doc %}
  @prompt
    I want a section for image + Text section, where would be a main component which could be at the left or the right, but should have the image at the left of their section and at the right the Text section. That section should have more or less 1/3 of the space for max width in PC visualization. And the other section would be images + Text elements but with image above and Text below for each element, the image should be fix width and the height as tall as the image can be presserving their original ratio. In PC visualization should have more or less enough space for 3 elements align, if the screen reduce their width, the elements try to fit without taking part of the main section space. So at max screen width if we have 3 elements should be fit the 3 elements horizontal, if we reduce a bit the width the last one wouldn't have enough space to fit so go below like in a new row, so would it be 2 elements in the first row and 1 element in the second row, and if the screen continue reducing the width, then it would be end like one single column with three rows (or more if there are more elements).If the width continue reducing until a phone width, then the main section would be alone in a single row, and the other subelements would be below organized in 3 columns. Finally, all the subelements should have the same height, which will correspond to the taller image+Text subelement, Ok, I think the main section should have more space 1/3 maybe is not enough, I guess 2/5 would be better. Also you create a fix ammount of sub elements (max 6) But it should be more like a container where you can add as much Image+Text subelements as you want, maybe we can add a field with the max allowed subelements
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-image-text-section-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-image-text-container-{{ ai_gen_id }} {
    max-width: {{ settings.page_width }}px;
    margin: 0 auto;
    padding: 0 {{ settings.spacing_grid_horizontal }}px;
    display: flex;
    gap: {{ block.settings.section_gap }}px;
    align-items: stretch;
  }

  .ai-main-section-{{ ai_gen_id }} {
    flex: 0 0 40%;
    display: flex;
    gap: {{ block.settings.main_gap }}px;
    {% if block.settings.main_layout == 'image_right' %}
      flex-direction: row-reverse;
    {% endif %}
  }

  .ai-main-image-{{ ai_gen_id }} {
    flex: 1;
    min-width: 0;
  }

  .ai-main-image-wrapper-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
  }

  .ai-main-image-wrapper-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-main-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 300px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: {{ block.settings.image_border_radius }}px;
  }

  .ai-main-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
  }

  .ai-main-text-{{ ai_gen_id }} {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: {{ block.settings.text_gap }}px;
  }

  .ai-main-heading-{{ ai_gen_id }} {
    margin: 0;
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    line-height: 1.2;
  }

  .ai-main-text-content-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.text_size }}px;
    line-height: 1.5;
  }

  .ai-sub-elements-{{ ai_gen_id }} {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax({{ block.settings.sub_element_min_width }}px, 1fr));
    gap: {{ block.settings.sub_elements_gap }}px;
    align-content: start;
  }

  .ai-sub-element-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.sub_element_gap }}px;
    height: var(--ai-sub-element-height-{{ ai_gen_id }});
  }

  .ai-sub-image-{{ ai_gen_id }} {
    width: {{ block.settings.sub_image_width }}px;
    height: auto;
    border-radius: {{ block.settings.sub_image_border_radius }}px;
    overflow: hidden;
    flex-shrink: 0;
  }

  .ai-sub-image-{{ ai_gen_id }} img {
    width: 100%;
    height: auto;
    display: block;
  }

  .ai-sub-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 200px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: {{ block.settings.sub_image_border_radius }}px;
  }

  .ai-sub-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 100px;
    max-height: 100px;
  }

  .ai-sub-text-{{ ai_gen_id }} {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.sub_text_gap }}px;
  }

  .ai-sub-heading-{{ ai_gen_id }} {
    margin: 0;
    font-size: {{ block.settings.sub_heading_size }}px;
    color: {{ block.settings.sub_heading_color }};
    line-height: 1.3;
  }

  .ai-sub-text-content-{{ ai_gen_id }} {
    color: {{ block.settings.sub_text_color }};
    font-size: {{ block.settings.sub_text_size }}px;
    line-height: 1.4;
    flex: 1;
  }

  @media screen and (max-width: 990px) {
    .ai-image-text-container-{{ ai_gen_id }} {
      flex-direction: column;
      gap: {{ block.settings.mobile_section_gap }}px;
    }

    .ai-main-section-{{ ai_gen_id }} {
      flex: none;
    }

    .ai-sub-elements-{{ ai_gen_id }} {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-image-text-container-{{ ai_gen_id }} {
      padding: 0 {{ settings.spacing_grid_horizontal | times: 0.75 }}px;
    }

    .ai-main-section-{{ ai_gen_id }} {
      flex-direction: column;
      gap: {{ block.settings.mobile_main_gap }}px;
    }

    .ai-main-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.85 }}px;
    }

    .ai-sub-elements-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.mobile_columns }}, 1fr);
    }

    .ai-sub-image-{{ ai_gen_id }} {
      width: 100%;
    }
  }
{% endstyle %}

<image-text-section-{{ ai_gen_id }}
  class="ai-image-text-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-image-text-container-{{ ai_gen_id }}">
    <div class="ai-main-section-{{ ai_gen_id }}">
      <div class="ai-main-image-{{ ai_gen_id }}">
        <div class="ai-main-image-wrapper-{{ ai_gen_id }}">
          {% if block.settings.main_image %}
            <img
              src="{{ block.settings.main_image | image_url: width: 800 }}"
              alt="{{ block.settings.main_image.alt | escape }}"
              loading="lazy"
              width="{{ block.settings.main_image.width }}"
              height="{{ block.settings.main_image.height }}"
            >
          {% else %}
            <div class="ai-main-image-placeholder-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </div>
      </div>

      <div class="ai-main-text-{{ ai_gen_id }}">
        {% if block.settings.main_heading != blank %}
          <h2 class="ai-main-heading-{{ ai_gen_id }}">{{ block.settings.main_heading }}</h2>
        {% endif %}
        {% if block.settings.main_text != blank %}
          <div class="ai-main-text-content-{{ ai_gen_id }}">{{ block.settings.main_text }}</div>
        {% endif %}
      </div>
    </div>

    <div class="ai-sub-elements-{{ ai_gen_id }}">
      {% assign max_elements = block.settings.max_sub_elements | default: 6 %}
      {% for i in (1..max_elements) %}
        {% liquid
          assign image_key = 'sub_image_' | append: i
          assign heading_key = 'sub_heading_' | append: i
          assign text_key = 'sub_text_' | append: i
          assign enabled_key = 'sub_element_' | append: i | append: '_enabled'

          assign sub_image = block.settings[image_key]
          assign sub_heading = block.settings[heading_key]
          assign sub_text = block.settings[text_key]
          assign is_enabled = block.settings[enabled_key]
        %}

        {% if is_enabled %}
          <div class="ai-sub-element-{{ ai_gen_id }}" data-element="{{ i }}">
            <div class="ai-sub-image-{{ ai_gen_id }}">
              {% if sub_image %}
                <img
                  src="{{ sub_image | image_url: width: 400 }}"
                  alt="{{ sub_image.alt | escape }}"
                  loading="lazy"
                  width="{{ sub_image.width }}"
                  height="{{ sub_image.height }}"
                >
              {% else %}
                <div class="ai-sub-image-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </div>

            <div class="ai-sub-text-{{ ai_gen_id }}">
              {% if sub_heading != blank %}
                <h3 class="ai-sub-heading-{{ ai_gen_id }}">{{ sub_heading }}</h3>
              {% endif %}
              {% if sub_text != blank %}
                <div class="ai-sub-text-content-{{ ai_gen_id }}">{{ sub_text }}</div>
              {% endif %}
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</image-text-section-{{ ai_gen_id }}>

<script>
  (function() {
    class ImageTextSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.equalizeSubElementHeights();
        window.addEventListener('resize', () => this.equalizeSubElementHeights());
      }

      equalizeSubElementHeights() {
        const subElements = this.querySelectorAll('.ai-sub-element-{{ ai_gen_id }}');
        
        if (subElements.length === 0) return;

        subElements.forEach(element => {
          element.style.height = 'auto';
        });

        let maxHeight = 0;
        subElements.forEach(element => {
          const height = element.offsetHeight;
          if (height > maxHeight) {
            maxHeight = height;
          }
        });

        document.documentElement.style.setProperty('--ai-sub-element-height-{{ ai_gen_id }}', maxHeight + 'px');
      }
    }

    customElements.define('image-text-section-{{ ai_gen_id }}', ImageTextSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image and text section",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_gap",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Gap between main and sub sections",
      "default": 40
    },
    {
      "type": "range",
      "id": "mobile_section_gap",
      "min": 20,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Mobile gap between sections",
      "default": 32
    },
    {
      "type": "range",
      "id": "max_sub_elements",
      "min": 3,
      "max": 12,
      "step": 1,
      "label": "Maximum sub elements",
      "default": 6
    },
    {
      "type": "header",
      "content": "Main section"
    },
    {
      "type": "select",
      "id": "main_layout",
      "label": "Layout",
      "options": [
        {
          "value": "image_left",
          "label": "Image left, text right"
        },
        {
          "value": "image_right",
          "label": "Image right, text left"
        }
      ],
      "default": "image_left"
    },
    {
      "type": "image_picker",
      "id": "main_image",
      "label": "Image"
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 0
    },
    {
      "type": "text",
      "id": "main_heading",
      "label": "Heading",
      "default": "Main heading"
    },
    {
      "type": "textarea",
      "id": "main_text",
      "label": "Text",
      "default": "Add your main text content here. This section takes up about 2/5 of the space on desktop."
    },
    {
      "type": "range",
      "id": "main_gap",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between image and text",
      "default": 24
    },
    {
      "type": "range",
      "id": "mobile_main_gap",
      "min": 16,
      "max": 32,
      "step": 4,
      "unit": "px",
      "label": "Mobile gap between image and text",
      "default": 20
    },
    {
      "type": "range",
      "id": "text_gap",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Gap between heading and text",
      "default": 12
    },
    {
      "type": "header",
      "content": "Main section style"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Sub elements"
    },
    {
      "type": "range",
      "id": "sub_element_min_width",
      "min": 200,
      "max": 350,
      "step": 10,
      "unit": "px",
      "label": "Minimum element width",
      "default": 250
    },
    {
      "type": "range",
      "id": "sub_elements_gap",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between elements",
      "default": 24
    },
    {
      "type": "range",
      "id": "sub_element_gap",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Gap between image and text in each element",
      "default": 12
    },
    {
      "type": "range",
      "id": "sub_image_width",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Image width",
      "default": 200
    },
    {
      "type": "range",
      "id": "sub_image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 0
    },
    {
      "type": "select",
      "id": "mobile_columns",
      "label": "Mobile columns",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        }
      ],
      "default": "3"
    },
    {
      "type": "header",
      "content": "Sub elements style"
    },
    {
      "type": "range",
      "id": "sub_text_gap",
      "min": 4,
      "max": 16,
      "step": 2,
      "unit": "px",
      "label": "Gap between heading and text",
      "default": 8
    },
    {
      "type": "range",
      "id": "sub_heading_size",
      "min": 16,
      "max": 28,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 20
    },
    {
      "type": "color",
      "id": "sub_heading_color",
      "label": "Heading color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "sub_text_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 14
    },
    {
      "type": "color",
      "id": "sub_text_color",
      "label": "Text color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Sub element 1"
    },
    {
      "type": "checkbox",
      "id": "sub_element_1_enabled",
      "label": "Enable element 1",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "sub_image_1",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_1",
      "label": "Heading",
      "default": "Sub heading 1"
    },
    {
      "type": "textarea",
      "id": "sub_text_1",
      "label": "Text",
      "default": "Add your text content for the first sub element here."
    },
    {
      "type": "header",
      "content": "Sub element 2"
    },
    {
      "type": "checkbox",
      "id": "sub_element_2_enabled",
      "label": "Enable element 2",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "sub_image_2",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_2",
      "label": "Heading",
      "default": "Sub heading 2"
    },
    {
      "type": "textarea",
      "id": "sub_text_2",
      "label": "Text",
      "default": "Add your text content for the second sub element here."
    },
    {
      "type": "header",
      "content": "Sub element 3"
    },
    {
      "type": "checkbox",
      "id": "sub_element_3_enabled",
      "label": "Enable element 3",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "sub_image_3",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_3",
      "label": "Heading",
      "default": "Sub heading 3"
    },
    {
      "type": "textarea",
      "id": "sub_text_3",
      "label": "Text",
      "default": "Add your text content for the third sub element here."
    },
    {
      "type": "header",
      "content": "Sub element 4"
    },
    {
      "type": "checkbox",
      "id": "sub_element_4_enabled",
      "label": "Enable element 4",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_4",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_4",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_4",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 5"
    },
    {
      "type": "checkbox",
      "id": "sub_element_5_enabled",
      "label": "Enable element 5",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_5",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_5",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_5",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 6"
    },
    {
      "type": "checkbox",
      "id": "sub_element_6_enabled",
      "label": "Enable element 6",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_6",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_6",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_6",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 7"
    },
    {
      "type": "checkbox",
      "id": "sub_element_7_enabled",
      "label": "Enable element 7",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_7",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_7",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_7",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 8"
    },
    {
      "type": "checkbox",
      "id": "sub_element_8_enabled",
      "label": "Enable element 8",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_8",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_8",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_8",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 9"
    },
    {
      "type": "checkbox",
      "id": "sub_element_9_enabled",
      "label": "Enable element 9",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_9",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_9",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_9",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 10"
    },
    {
      "type": "checkbox",
      "id": "sub_element_10_enabled",
      "label": "Enable element 10",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_10",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_10",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_10",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 11"
    },
    {
      "type": "checkbox",
      "id": "sub_element_11_enabled",
      "label": "Enable element 11",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_11",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_11",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_11",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Sub element 12"
    },
    {
      "type": "checkbox",
      "id": "sub_element_12_enabled",
      "label": "Enable element 12",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "sub_image_12",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "sub_heading_12",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub_text_12",
      "label": "Text"
    }
  ],
  "presets": [
    {
      "name": "Image and text section"
    }
  ]
}
{% endschema %}